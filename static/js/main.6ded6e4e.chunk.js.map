{"version":3,"sources":["components/Loader/Loader.js","services/images-api.js","components/Searchbar/Searchbar.js","components/ImageGallery/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Button/Button.js","components/Modal/Modal.js","App.js","index.js"],"names":["MarkUpLoader","className","type","color","height","width","KEY","a","query","page","fetch","respons","json","parsedRespons","fetchImages","Searchbar","state","onSubmitHandler","e","preventDefault","trim","props","onSubmit","reset","alert","onInput","currentTarget","value","setState","this","onChange","autoComplete","autoFocus","placeholder","Component","ImageGalleryItem","image","alt","onModalClick","onClick","src","ImageGallery","images","openModal","map","tags","webformatURL","id","largeImageURL","Button","onMoreClick","modalRoot","document","querySelector","Modal","onBackdropClickHandle","target","closeModal","onEscPressHandle","code","window","addEventListener","removeEventListener","modalImg","createPortal","App","isLoading","showModal","onSearchSubmit","onBtnClickHandler","prevProps","prevState","then","res","hits","scrollTo","top","documentElement","scrollHeight","behavior","catch","console","log","finally","Loader","length","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.6ded6e4e.chunk.js","sourcesContent":["import Loader from 'react-loader-spinner';\n\nfunction MarkUpLoader() {\n  return (\n    <div className=\"loader\">\n      <Loader type=\"Grid\" color=\"#3f51b5\" height={80} width={80} />\n    </div>\n  );\n}\n\nexport default MarkUpLoader;\n","const KEY = '23292870-e9e1fc8f4fc8bd7151266ea82';\n\nasync function fetchImages({ query, page }) {\n  const respons = await fetch(\n    `https://pixabay.com/api/?q=${query}&page=${page}&key=${KEY}&image_type=photo&orientation=horizontal&per_page=12`,\n  );\n  const parsedRespons = await respons.json();\n  return parsedRespons;\n}\n\nexport default fetchImages;\n","import { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Searchbar extends Component {\n  state = {\n    query: '',\n  };\n\n  static propTypes = {\n    onSubmit: PropTypes.func,\n  };\n\n  onSubmitHandler = e => {\n    e.preventDefault();\n\n    const query = this.state.query.trim();\n    if (!query) {\n      alert('Please enter a search term to begin your search.');\n      return;\n    }\n\n    this.props.onSubmit(query);\n    this.reset();\n  };\n\n  onInput = e => {\n    const query = e.currentTarget.value;\n    this.setState({ query });\n  };\n\n  reset = () => {\n    this.setState({ query: '' });\n  };\n\n  render() {\n    const { query } = this.state;\n\n    return (\n      <header className=\"Searchbar\">\n        <form className=\"SearchForm\" onSubmit={this.onSubmitHandler}>\n          <button type=\"submit\" className=\"SearchForm-button\">\n            <span className=\"SearchForm-button-label\">Search</span>\n          </button>\n\n          <input\n            className=\"SearchForm-input\"\n            onChange={this.onInput}\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search images and photos\"\n            value={query}\n          />\n        </form>\n      </header>\n    );\n  }\n}\n\nexport default Searchbar;\n","import PropTypes from 'prop-types';\n\nfunction ImageGalleryItem({ image, alt, onModalClick }) {\n  return (\n    <li className=\"ImageGalleryItem\" onClick={onModalClick}>\n      <img src={image} alt={alt} className=\"ImageGalleryItem-image\" />\n    </li>\n  );\n}\n\nImageGalleryItem.propTypes = {\n  image: PropTypes.string,\n  alt: PropTypes.string,\n  onModalClick: PropTypes.func,\n};\n\nexport default ImageGalleryItem;\n","import PropTypes from 'prop-types';\n\nimport ImageGalleryItem from './ImageGalleryItem/ImageGalleryItem';\n\nfunction ImageGallery({ images, openModal }) {\n  return (\n    <ul className=\"ImageGallery\">\n      {images.map(({ tags, webformatURL, id, largeImageURL }) => {\n        return (\n          <ImageGalleryItem\n            key={id}\n            image={webformatURL}\n            alt={tags}\n            onModalClick={() => openModal(largeImageURL)}\n          />\n        );\n      })}\n    </ul>\n  );\n}\n\nImageGallery.propTypes = {\n  images: PropTypes.arrayOf(PropTypes.object),\n  openModal: PropTypes.func,\n};\n\nexport default ImageGallery;\n","import PropTypes from 'prop-types';\n\nfunction Button({ onMoreClick }) {\n  return (\n    <button className=\"Button\" onClick={onMoreClick}>\n      Load more\n    </button>\n  );\n}\n\nButton.propTypes = {\n  onMoreClick: PropTypes.func,\n};\n\nexport default Button;\n","import PropTypes from 'prop-types';\nimport { Component } from 'react';\nimport { createPortal } from 'react-dom';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nclass Modal extends Component {\n  static propTypes = {\n    tags: PropTypes.string,\n    modalImg: PropTypes.string,\n  };\n\n  componentDidMount() {\n    window.addEventListener('keydown', this.onEscPressHandle);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.onEscPressHandle);\n  }\n\n  onBackdropClickHandle = e => {\n    if (e.currentTarget === e.target) {\n      this.props.closeModal();\n    }\n  };\n\n  onEscPressHandle = e => {\n    if (e.code === 'Escape') {\n      this.props.closeModal();\n    }\n  };\n\n  render() {\n    const { tags, modalImg } = this.props;\n    return createPortal(\n      <div className=\"Overlay\" onClick={this.onBackdropClickHandle}>\n        <div className=\"Modal\">\n          <img src={modalImg} alt={tags} />\n        </div>\n      </div>,\n      modalRoot,\n    );\n  }\n}\n\nexport default Modal;\n","import Loader from './components/Loader';\nimport { Component } from 'react';\n\nimport './App.css';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\n\nimport fetchImages from './services/images-api';\n\nimport Searchbar from './components/Searchbar';\nimport ImageGallery from './components/ImageGallery';\nimport Button from './components/Button';\nimport Modal from './components/Modal';\n\nclass App extends Component {\n  state = {\n    images: [],\n    query: '',\n    page: 1,\n    modalImg: '',\n    isLoading: false,\n    showModal: false,\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (\n      prevState.query === this.state.query &&\n      prevState.page === this.state.page\n    ) {\n      return;\n    }\n    this.setState({ isLoading: true });\n\n    fetchImages(this.state)\n      .then(res => {\n        const images = [...this.state.images, ...res.hits];\n        this.setState({ images });\n        if (this.state.page !== 1) {\n          window.scrollTo({\n            top: document.documentElement.scrollHeight,\n            behavior: 'smooth',\n          });\n        }\n      })\n      .catch(res => {\n        console.log(res);\n      })\n      .finally(() => this.setState({ isLoading: false }));\n  }\n\n  openModal = modalImg => {\n    this.setState({ showModal: true, modalImg });\n  };\n\n  closeModal = () => {\n    this.setState({ showModal: false });\n  };\n\n  onSearchSubmit = query => {\n    this.setState({ query, page: 1, images: [] });\n  };\n\n  onBtnClickHandler = () => {\n    const page = this.state.page + 1;\n    this.setState({ page });\n  };\n\n  render() {\n    const { images, isLoading, showModal, modalImg } = this.state;\n    return (\n      <div className=\"App\">\n        <Searchbar onSubmit={this.onSearchSubmit}></Searchbar>\n        <ImageGallery images={images} openModal={this.openModal} />\n        {isLoading && <Loader />}\n        {images.length !== 0 && isLoading !== true && (\n          <Button onMoreClick={this.onBtnClickHandler} />\n        )}\n        {showModal && (\n          <Modal closeModal={this.closeModal} modalImg={modalImg} />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}